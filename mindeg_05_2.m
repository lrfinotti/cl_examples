// CANONICAL LIFTING -- CHARACTERISTIC p =  5

a1 :=  (a0^3*b0^2 + b0^4)/a0;

b1 :=  4*a0^6*b0 + a0^3*b0^3 + b0^5;

x1 :=  4/a0*x0^7 + 4*b0/a0*x0^4 + a0*x0^3 + 3*b0*x0^2 + 3*b0^2/a0*x0 + a0*b0;

P1 :=  1/a0*x0^8 + 2*x0^6 + 3*b0/a0*x0^5 + 2*a0*x0^4 + 3*b0*x0^3 + a0^2*x0^2 + 
    3*a0*b0*x0 + 3*a0^3 + 3*b0^2;

a2 :=  (2*a0^36 + a0^33*b0^2 + a0^30*b0^4 + 3*a0^27*b0^6 + 2*a0^24*b0^8 + 
    a0^18*b0^12 + 4*a0^12*b0^16 + 3*a0^9*b0^18 + 4*a0^6*b0^20 + 4*a0^3*b0^22 + 
    4*b0^24)/a0^11;

b2 :=  a0^36*b0 + 4*a0^33*b0^3 + 3*a0^27*b0^7 + 4*a0^21*b0^11 + 4*a0^15*b0^15 + 
    a0^12*b0^17 + 3*a0^6*b0^21 + b0^25;

x2 :=  2/a0^6*x0^37 + (a0^3*b0^2 + b0^4)/a0^11*x0^35 + 2*b0/a0^6*x0^34 + 
    3/a0^4*x0^33 + (4*a0^3 + 4*b0^2)/a0^6*x0^31 + 3*b0^5/a0^10*x0^30 + 
    4*b0^2/a0^5*x0^29 + (a0^3 + 3*b0^2)/a0^4*x0^27 + 2*b0/a0^2*x0^26 + 4*x0^25 +
    (4*a0^3*b0 + 3*b0^3)/a0^4*x0^24 + (4*a0^6 + 3*a0^3*b0^2 + b0^4)/a0^5*x0^23 +
    (2*a0^3*b0^3 + 4*b0^5)/a0^6*x0^22 + (a0^3*b0^2 + b0^4)/a0^4*x0^21 + 
    (2*a0^12*b0 + 4*a0^9*b0^3 + a0^3*b0^7 + b0^9)/a0^11*x0^20 + (a0^9 + 
    3*a0^6*b0^2 + 4*b0^6)/a0^6*x0^19 + (2*a0^6*b0 + a0^3*b0^3 + 
    4*b0^5)/a0^4*x0^18 + (2*a0^6 + a0^3*b0^2 + b0^4)/a0^2*x0^17 + (3*a0^6*b0^3 +
    4*a0^3*b0^5 + 3*b0^7)/a0^6*x0^16 + (2*a0^15 + 4*a0^12*b0^2 + 3*a0^6*b0^6 + 
    4*b0^10)/a0^10*x0^15 + (4*a0^6*b0 + 2*b0^5)/a0^2*x0^14 + (3*a0^9 + 
    4*a0^6*b0^2 + 3*a0^3*b0^4 + 2*b0^6)/a0^3*x0^13 + (3*a0^9*b0 + 2*a0^6*b0^3 + 
    a0^3*b0^5 + 2*b0^7)/a0^4*x0^12 + (2*a0^9*b0^2 + 3*a0^6*b0^4 + 4*a0^3*b0^6 + 
    2*b0^8)/a0^5*x0^11 + (2*a0^6*b0^3 + 3*a0^3*b0^5 + 3*b0^7)/a0^3*x0^10 + 
    (3*a0^9*b0^2 + 2*a0^6*b0^4 + 4*a0^3*b0^6 + 4*b0^8)/a0^4*x0^9 + (2*a0^9*b0^3 
    + 2*a0^6*b0^5 + 4*a0^3*b0^7 + b0^9)/a0^5*x0^8 + (3*a0^9*b0^4 + 3*a0^6*b0^6 +
    a0^3*b0^8 + 2*b0^10)/a0^6*x0^7 + (3*a0^9*b0^3 + 3*a0^3*b0^7 + 
    2*b0^9)/a0^4*x0^6 + (4*a0^21 + 3*a0^15*b0^4 + a0^12*b0^6 + 2*a0^9*b0^8 + 
    2*a0^3*b0^12 + 2*b0^14)/a0^11*x0^5 + (a0^9*b0^5 + 3*a0^6*b0^7 + 4*a0^3*b0^9 
    + 2*b0^11)/a0^6*x0^4 + (4*a0^9*b0^4 + 4*a0^6*b0^6 + a0^3*b0^8 + 
    3*b0^10)/a0^4*x0^3 + (2*a0^9*b0^5 + 2*a0^6*b0^7 + 4*b0^11)/a0^5*x0^2 + 
    (2*a0^9*b0^6 + 4*b0^12)/a0^6*x0 + (4*a0^21*b0 + a0^18*b0^3 + 4*a0^15*b0^5 + 
    a0^12*b0^7 + a0^9*b0^9 + 3*a0^6*b0^11 + b0^15)/a0^10;

P2 :=  1/a0^10*x0^56 + 2/a0^9*x0^54 + 2*b0/a0^10*x0^53 + 1/a0^8*x0^52 + 
    2*b0/a0^9*x0^51 + b0^2/a0^10*x0^50 + 3/a0^6*x0^48 + (4*a0^3*b0^2 + 
    4*b0^4)/a0^11*x0^46 + 4*b0/a0^6*x0^45 + (3*a0^6 + 3*a0^3*b0^2 + 
    3*b0^4)/a0^10*x0^44 + (3*a0^3*b0^3 + 3*b0^5)/a0^11*x0^43 + (2*a0^6 + 
    4*a0^3*b0^2 + 4*b0^4)/a0^9*x0^42 + (3*a0^6*b0 + 3*a0^3*b0^3 + 
    4*b0^5)/a0^10*x0^41 + (a0^9 + 3*a0^6*b0^2 + 4*a0^3*b0^4 + 
    4*b0^6)/a0^11*x0^40 + (2*a0^6*b0 + 2*b0^5)/a0^9*x0^39 + (2*a0^9 + a0^6*b0^2 
    + 2*b0^6)/a0^10*x0^38 + (2*a0^6*b0 + 4*a0^3*b0^3 + b0^5)/a0^8*x0^37 + 
    (a0^6*b0^2 + 4*a0^3*b0^4 + 2*b0^6)/a0^9*x0^36 + (4*a0^6*b0^3 + 
    b0^7)/a0^10*x0^35 + 3*b0^4/a0^5*x0^34 + (4*a0^3*b0^3 + 3*b0^5)/a0^6*x0^33 + 
    (2*a0^6 + 2*b0^4)/a0^4*x0^32 + (a0^12*b0 + a0^9*b0^3 + 3*a0^6*b0^5 + 
    2*a0^3*b0^7 + 2*b0^9)/a0^11*x0^31 + (4*a0^9 + 4*b0^6)/a0^6*x0^30 + 
    (2*a0^12*b0 + 2*a0^9*b0^3 + 3*a0^6*b0^5 + 4*a0^3*b0^7 + 4*b0^9)/a0^10*x0^29 
    + (2*a0^12*b0^2 + a0^9*b0^4 + 4*a0^6*b0^6 + 4*a0^3*b0^8 + 
    4*b0^10)/a0^11*x0^28 + (4*a0^12*b0 + a0^9*b0^3 + 4*a0^6*b0^5 + 2*a0^3*b0^7 +
    2*b0^9)/a0^9*x0^27 + (4*a0^15 + 2*a0^12*b0^2 + 4*a0^3*b0^8 + 
    4*b0^10)/a0^10*x0^26 + (4*a0^15*b0 + a0^12*b0^3 + 2*a0^9*b0^5 + 2*a0^6*b0^7 
    + 2*a0^3*b0^9 + 2*b0^11)/a0^11*x0^25 + (4*a0^6 + 4*a0^3*b0^2 + 2*b0^4)*x0^24
    + (3*a0^9*b0 + 3*a0^6*b0^3 + 2*b0^7)/a0^4*x0^23 + (3*a0^9 + 3*a0^6*b0^2 + 
    4*a0^3*b0^4 + 2*b0^6)/a0^2*x0^22 + (2*a0^9*b0 + b0^7)/a0^3*x0^21 + 
    (3*a0^9*b0^2 + 4*a0^3*b0^6 + 2*b0^8)/a0^4*x0^20 + (4*a0^7*b0 + 
    a0^4*b0^3)*x0^19 + (3*a0^6*b0^2 + 3*a0^3*b0^4 + 2*b0^6)*x0^18 + (3*a0^9*b0 +
    4*a0^6*b0^3 + 3*a0^3*b0^5 + 3*b0^7)/a0*x0^17 + (3*a0^12*b0^2 + 
    2*b0^10)/a0^5*x0^16 + (a0^12*b0 + 2*a0^9*b0^3 + 4*a0^6*b0^5 + 4*a0^3*b0^7 + 
    4*b0^9)/a0^3*x0^15 + (4*a0^15 + a0^9*b0^4 + 2*a0^3*b0^8 + 
    4*b0^10)/a0^4*x0^14 + (2*a0^15*b0 + 3*a0^12*b0^3 + 3*a0^9*b0^5 + a0^6*b0^7 +
    a0^3*b0^9 + 4*b0^11)/a0^5*x0^13 + (4*a0^15 + 4*a0^9*b0^4 + 2*a0^6*b0^6 + 
    2*a0^3*b0^8 + 2*b0^10)/a0^3*x0^12 + (2*a0^18*b0^3 + a0^15*b0^5 + a0^12*b0^7 
    + a0^9*b0^9 + 4*a0^6*b0^11 + 4*b0^15)/a0^10*x0^11 + (a0^18 + 4*a0^15*b0^2 + 
    3*a0^9*b0^6 + 2*a0^6*b0^8 + 4*a0^3*b0^10 + 2*b0^12)/a0^5*x0^10 + (a0^21*b0 +
    4*a0^18*b0^3 + 4*a0^12*b0^7 + 4*a0^9*b0^9 + 3*b0^15)/a0^9*x0^9 + (4*a0^24 + 
    a0^21*b0^2 + 2*a0^18*b0^4 + a0^15*b0^6 + 4*a0^12*b0^8 + a0^9*b0^10 + 
    3*b0^16)/a0^10*x0^8 + (a0^21*b0 + a0^18*b0^3 + a0^15*b0^5 + 3*a0^12*b0^7 + 
    2*a0^9*b0^9 + 4*b0^15)/a0^8*x0^7 + (3*a0^24 + 2*a0^21*b0^2 + 3*a0^18*b0^4 + 
    3*a0^15*b0^6 + 4*a0^12*b0^8 + 3*a0^9*b0^10 + 3*b0^16)/a0^9*x0^6 + 
    (2*a0^24*b0 + 2*a0^21*b0^3 + a0^18*b0^5 + 4*a0^15*b0^7 + 2*a0^9*b0^11 + 
    4*b0^17)/a0^10*x0^5 + (a0^13*b0^2 + 4*a0^4*b0^8 + 4*a0*b0^10)*x0^4 + 
    (4*a0^15*b0 + 3*a0^12*b0^3 + 4*a0^6*b0^7 + 2*a0^3*b0^9 + b0^11)*x0^3 + 
    (3*a0^17 + 4*a0^14*b0^2 + 4*a0^11*b0^4 + a0^8*b0^6 + 4*a0^5*b0^8 + 
    2*a0^2*b0^10)*x0^2 + (4*a0^16*b0 + 4*a0^13*b0^3 + 4*a0^10*b0^5 + 4*a0^7*b0^7
    + 3*a0^4*b0^9 + a0*b0^11)*x0 + 4*a0^18 + 4*a0^15*b0^2 + a0^12*b0^4 + 
    3*a0^9*b0^6 + a0^6*b0^8 + 3*b0^12;

